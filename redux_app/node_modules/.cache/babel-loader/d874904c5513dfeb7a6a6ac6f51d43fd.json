{"ast":null,"code":"var _jsxFileName = \"/home/vivan/Estudos/React.js/SON_4_Iniciando_com_redux/redux_app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { clickHelloAction } from './actions/index';\nimport store from \"./store\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: ''\n    };\n  }\n\n  render() {\n    const text = this.state.text;\n    const _this$props = this.props,\n          msg = _this$props.msg,\n          clickHelloAction = _this$props.clickHelloAction;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => clickHelloAction(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Click to Dispatch Action\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, msg));\n  }\n\n}\n/*\n * No momento em que um determinado evento acontecer a função mapStateToProps irá\n * capturar dados do state irá passar para a props, a partir deste momento a função\n * de render irá rodar novamente pq ouve uma atualização do state.\n *\n * Isso tudo se deve a função connect que faz ligaçao entre o componente (classe) e a\n * store (se existe state, por consequencia existem props).\n * Isso se dá pela função mapStateToProps, que serve para passar e receber dados.\n *\n * Tambem existe outra função, que por sua vez é responsável pela chamada das\n * actions creators, trata-se da função mapDispachToProps. É uma forma de capturar\n * eventos do componente e move-los para dentro de uma action.\n */\n\n\nconst mapStateToProps = store => {\n  return {\n    msg: store.clickReducer.msg\n  };\n};\n\nconst mapDispachToProps = dispatch => bindActionCreators({\n  clickHelloAction\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispachToProps)(App);","map":{"version":3,"sources":["/home/vivan/Estudos/React.js/SON_4_Iniciando_com_redux/redux_app/src/App.js"],"names":["React","Component","connect","bindActionCreators","clickHelloAction","store","App","constructor","props","state","text","render","msg","mapStateToProps","clickReducer","mapDispachToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA2B;AACvBM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACGD,IADH,GACY,KAAKD,KADjB,CACGC,IADH;AAAA,wBAE6B,KAAKF,KAFlC;AAAA,UAEGI,GAFH,eAEGA,GAFH;AAAA,UAEQR,gBAFR,eAEQA,gBAFR;AAGL,WACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAG,MAAMA,gBAAgB,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMQ,GAAN,CAFJ,CADJ;AAMH;;AAlBsB;AAqB3B;;;;;;;;;;;;;;;AAcA,MAAMC,eAAe,GAAIR,KAAD,IAAW;AAC/B,SAAO;AACHO,IAAAA,GAAG,EAAEP,KAAK,CAACS,YAAN,CAAmBF;AADrB,GAAP;AAGH,CAJD;;AAMA,MAAMG,iBAAiB,GAAIC,QAAD,IAAcb,kBAAkB,CAAC;AAACC,EAAAA;AAAD,CAAD,EAAqBY,QAArB,CAA1D;;AAEA,eAAed,OAAO,CAACW,eAAD,EAAkBE,iBAAlB,CAAP,CAA4CT,GAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { clickHelloAction } from './actions/index';\nimport store from \"./store\";\n\nclass App extends Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            text: ''\n        }\n    }\n\n    render() {\n        const { text } = this.state;\n        const { msg, clickHelloAction } = this.props;\n        return (\n            <div className=\"App\">\n                <button type=\"button\" onClick={ () => clickHelloAction() }>Click to Dispatch Action</button>\n                <h1>{ msg }</h1>\n            </div>\n        );\n    }\n}\n\n/*\n * No momento em que um determinado evento acontecer a função mapStateToProps irá\n * capturar dados do state irá passar para a props, a partir deste momento a função\n * de render irá rodar novamente pq ouve uma atualização do state.\n *\n * Isso tudo se deve a função connect que faz ligaçao entre o componente (classe) e a\n * store (se existe state, por consequencia existem props).\n * Isso se dá pela função mapStateToProps, que serve para passar e receber dados.\n *\n * Tambem existe outra função, que por sua vez é responsável pela chamada das\n * actions creators, trata-se da função mapDispachToProps. É uma forma de capturar\n * eventos do componente e move-los para dentro de uma action.\n */\n\nconst mapStateToProps = (store) => {\n    return {\n        msg: store.clickReducer.msg\n    }\n};\n\nconst mapDispachToProps = (dispatch) => bindActionCreators({clickHelloAction}, dispatch);\n\nexport default connect(mapStateToProps, mapDispachToProps)(App);\n"]},"metadata":{},"sourceType":"module"}